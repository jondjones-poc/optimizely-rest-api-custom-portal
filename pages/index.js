import Head from 'next/head'
import styles from '../styles/Home.module.css'
import React, { useEffect, useState } from "react";
import Image from 'next/image';
import { useRouter } from 'next/router';
import FeatureFlagComponent from '../component/flagRender'
import Link from 'next/link'

const defaultProjectId = process.env.NEXT_PUBLIC_DEFAULT_PROJECT_ID;
const sdkKey = process.env.NEXT_PUBLIC_SDK_KEY;

const axios = require('axios');
axios.defaults.headers.common['Authorization'] = sdkKey;

export default function Home()
{
  const [featureData, setFeatureData] = useState([]);
  const router = useRouter();
  let { permissionGroup,  environment: environment = "RetailOne" } = router.query;

  let projectId = '';
  switch(permissionGroup) {
    case "dev":
      projectId = defaultProjectId
      break;
    case "retail":
      projectId = process.env.NEXT_PUBLIC_PROJECT_TWO
      break;
    default :
      projectId = defaultProjectId
      break;
  }

  useEffect(() => {

    // Authenticate User :  https://app.optimizely.com/oauth2/authorize
    // https://library.optimizely.com/docs/api/app/v2/index.html#section/Authentication

    let flagData = [];

    axios.get(`https://api.optimizely.com/flags/v1/projects/${projectId}/flags`)
    .then(function (response) {
      response.data.items.map(x => {
        const tempObject = {
          key: x.key,
          name: x.name
        };

        Object.keys(x.environments).forEach(function(key, index) {
          if (key === environment) {
            const enabled = x.environments[key].enabled;

            tempObject.enabled = enabled.toString();
            tempObject.environment = x.environments[key].name;

            // Get enable/disable feature Url
            const url = enabled ? x.environments[key].disable_url :  x.environments[key].enable_url
            tempObject.url = url;
          };
        });

        flagData.push(tempObject);
      })
    }).catch(ex =>
      console.log("Failed to get project data", ex)
    ).finally(() => {
      setFeatureData(flagData);
    });
  },[projectId, environment]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>

        <Image src="/logo.png" alt="me" width="250" height="64" />

        <h3>Features For {environment} filtered by permission {permissionGroup}</h3>
        <div>Filter By Permission
          (
            <Link href={{ pathname: '/', query: { permissionGroup: 'dev', environment } }}><a>Dev</a></Link> /
            <Link href={{ pathname: '/', query: { permissionGroup: 'retail', environment } }}><a> Retail</a></Link>
          )
        </div>
        <div>Filter By Retailer
          (
            <Link href={{ pathname: '/', query: { permissionGroup, environment: "RetailOne" } }}><a>Retailer One</a></Link> /
            <Link href={{ pathname: '/', query: { permissionGroup, environment: "RetailTwo"} }}><a> Retailer Two</a></Link>
          )
        </div>
        <div>
            {featureData && <FeatureFlagComponent featureData={featureData} />}
        </div>

      </main>

      <footer className={styles.footer}>
      </footer>
    </div>
  )
}
